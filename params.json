{"name":"learn-clojure","tagline":"Web application for the learning clojure class","body":"# learn-clojure\r\n[ ![Codeship Status for mateoconfeugo/learn-clojure](https://codeship.io/projects/56fd2f90-0dd3-0132-184d-0ac0b7fe3cd9/status)](https://codeship.io/projects/32332)\r\n\r\nA Clojure web application designed to help you:\r\n* Learn clojure \r\n* Become familar with the common libraries with an emphasis on web development\r\n* Learn the development deployment and maintenance tools, procedures available to make your life simplier \r\n* Be able to come back to a project weeks,months,years later and have something you can run use and understand\r\n\r\nThe idea is that making easy to contribute to the project, \r\ntest the project and deploy the project right at the beginning will help you to complete the project.\r\nGetting a project done is about keeping the momentuem going.\r\n\r\nCoupling awesome technology like clojure/script together with some devops best practices can help you get the project completed and allows it to be improved upon in a maintainable fashion\r\n\r\nEvery project should have out of the box\r\n* Working Demo in the cloud\r\n* Documentation of the code in the literate style\r\n* Pallet deployment\r\n* Publish artifact to repo\r\n* Test framework\r\n* Source Control Strategy\r\n\r\n## Usage\r\n\r\nTry to use lein a central point for doing all you development/operations/maintence tasks for example:\r\n\r\nDevops:\r\n\r\n### Launch the application in a docker container\r\nlein pallet up -P docker\r\n### Push the application jar/uberjar to a private s3 bucket\r\nlein deploy private\r\n### Launch the application to prd/stg/qa aws/rs/docker\r\nlein pallet up prd/stg/qa -P aws/rs/docker\r\n\r\n##  Development\r\n\r\n### Continuous run the test suite\r\nlein autoexpect\r\n### Run the clojurescript compiler in develoment\r\nlein cljsbuild auto\r\n### Run the test suite\r\nlein test\r\n### Create the documentation\r\nlein marg\r\n\r\n### Using an iteractive environment\r\nBeing able to write the code in the application as it is running.\r\nCreating the code while creating the test.  Then copying the test into a test suite file and evaluating that.\r\nFurther since the lein autoexpect plugin is continuous running your test it will pick up the change and run it.\r\n\r\n\r\n## License\r\n\r\nCopyright Â© 2014 Matt Burns All rights reserved\r\n\r\nDistributed under the Eclipse Public License, the same as Clojure.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}